+ сделать правильный отчет с депендент категориями
+ Разобраться с единицами измерения (ms, ns, s)
+ Сформировать правильный файл rrddef с учетом депендент категорий
+ Научить загружать данные индексов, в случае ошибки научиться их сбрасывать
+ сделать неблокирующую запись информации
+ Сделать гнездяющиеся конфигурации серий. (mapped to и все такое).
+ Сделать sql мониторинг
+ Встроить в tomcat,
+ встроить в sbns
+ оптимизировать MapsTo

- продумать как конфигурировать все это добро (иерархические категории COUNTER, INSPESCTION->SQL->MAINDB, GAUGE-BUSINESS-USERS/SESSION/)
- сделать отчет по умолчанию (выводит все и вся)
- продумать как публиковать это в JMX
- Окрасивить отчеты (сортировки добавить, уменьшить шрифт, расскрасить горячие точки)
- сделать выбор отчета (из найденых описателей)
- прогнать на использование памяти (создание объектов, GC)
- сделать размер слота конфигурируемый и проносимым на страницу отчета
- Сделать расширенную информацию по CPU (вайт тайм, блок тайм, каунт и т.п.)
- придумать про встраивание и распространение
- опубликовать в Maven


встраивание:
- без логгина, без движка. только апи (для библиотек)
- отдельный вар в томкате, для отчетов
- вспомогательный модуль для http, sql и т.п. сенсоров

Требования к конфигурированию:
- runtime, но через имплементацию, без if-ов

Требования к функционированию:
- определить объм выделяемой памяти и проверить потребление памяти при эксплуатации
- разделить генерацию событий, передачу, агрегацию.


У нас появляется следующие направления:

- API
- Интеграционные плагины от разных серверов, фич мониторинга к АПИ
- Маппинг АПИ в существующие средства мониторинга
- Оптимизация сбора данных
- Формирование презентационного слоя (отчеты, разделы и т.п.)
- Конфигурирование данных (xml документация и т.п.)





