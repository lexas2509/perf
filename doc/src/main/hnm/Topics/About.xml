<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="Алексей" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">About</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">About</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Java application monitoring is very important part of application support. If your application has good monitoring subsystem you can easily improve applications in QA and production and it helps to:</text></para>
    <para styleclass="Normal"></para>
    <list id="0" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="font-family:Symbol; font-size:10pt; color:#000000;">
      <li styleclass="Normal"><text styleclass="Normal" translate="true">give facts about the average response times and number of executions</text></li>
      <li styleclass="Normal"><text styleclass="Normal" translate="true">make decisions when trends are bad, before problems become too serious</text></li>
      <li styleclass="Normal"><text styleclass="Normal" translate="true">optimize based on the more limiting response times</text></li>
      <li styleclass="Normal"><text styleclass="Normal" translate="true">find the root causes of response times</text></li>
      <li styleclass="Normal"><text styleclass="Normal" translate="true">verify the real improvement after optimizations</text></li>
    </list>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Currently there are too many different instruments to monitor Java and Java EE applications, such as VisualVM, JConsole, Jamon, Javamelody, AppDynamics, JavaMelody, Metrics and so on. But some of them are just connectors to JMX beans, some of them non-customizable, some of them has a significant footprint, some of them don&apos;t store any historical data. </text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This library helps to create an effective, very useful application monitoring subsystem. </text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">It includes summary charts showing the evolution over time of the following indicators:</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Number of executions, mean execution times and percentage of errors of http requests, sql requests, jsf actions, struts actions, jsp pages or methods of business façades (if EJB3, Spring or Guice)</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Java memory</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Java CPU</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Number of user sessions</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Number of jdbc connections</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">These charts can be viewed on the current day, week, month, year or custom period.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">JavaMelody includes statistics of predefined counters (currently http requests, sql requests, jsf actions, struts actions, jsp pages and methods of business façades if EJB3, Spring or Guice) with, for each counter :</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">A summary indicating the overall number of executions, the average execution time, the cpu time and the percentage of errors.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">And the percentage of time spent in the requests for which the average time exceeds a configurable threshold.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">And the complete list of requests, aggregated without dynamic parameters with, for each, the number of executions, the mean execution time, the mean cpu time, the percentage of errors and an evolution chart of execution time over time.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Furthermore, each http request indicates the size of the flow response, the mean number of sql executions and the mean sql time.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">It also includes statistics on http errors, on warnings and errors in logs, on data caches if ehcache and on batch jobs if quartz.</text></para>
    <para styleclass="Normal"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">An optional and independent collect server may be used if necessary to unload the application of storage management, and of report generation and to centralize the data of clustered applications or of several applications.</text></para>
    <para styleclass="Normal"></para>
  </body>
</topic>
